// @generated by protoc-gen-es v0.1.1 with parameter "target=js"
// @generated from file ibc/core/connection/v1/tx.proto (package ibc.core.connection.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {Any, proto3} from "@bufbuild/protobuf";
import {Counterparty, Version} from "./connection_pb.js";
import {Height} from "../../client/v1/client_pb.js";

/**
 * MsgConnectionOpenInit defines the msg sent by an account on Chain A to
 * initialize a connection with Chain B.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenInit
 */
export const MsgConnectionOpenInit = proto3.makeMessageType(
  "ibc.core.connection.v1.MsgConnectionOpenInit",
  () => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "counterparty", kind: "message", T: Counterparty },
    { no: 3, name: "version", kind: "message", T: Version },
    { no: 4, name: "delay_period", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgConnectionOpenInitResponse defines the Msg/ConnectionOpenInit response
 * type.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenInitResponse
 */
export const MsgConnectionOpenInitResponse = proto3.makeMessageType(
  "ibc.core.connection.v1.MsgConnectionOpenInitResponse",
  [],
);

/**
 * MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a
 * connection on Chain B.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenTry
 */
export const MsgConnectionOpenTry = proto3.makeMessageType(
  "ibc.core.connection.v1.MsgConnectionOpenTry",
  () => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "previous_connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_state", kind: "message", T: Any },
    { no: 4, name: "counterparty", kind: "message", T: Counterparty },
    { no: 5, name: "delay_period", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "counterparty_versions", kind: "message", T: Version, repeated: true },
    { no: 7, name: "proof_height", kind: "message", T: Height },
    { no: 8, name: "proof_init", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 9, name: "proof_client", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 10, name: "proof_consensus", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 11, name: "consensus_height", kind: "message", T: Height },
    { no: 12, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgConnectionOpenTryResponse defines the Msg/ConnectionOpenTry response type.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenTryResponse
 */
export const MsgConnectionOpenTryResponse = proto3.makeMessageType(
  "ibc.core.connection.v1.MsgConnectionOpenTryResponse",
  [],
);

/**
 * MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A to
 * acknowledge the change of connection state to TRYOPEN on Chain B.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenAck
 */
export const MsgConnectionOpenAck = proto3.makeMessageType(
  "ibc.core.connection.v1.MsgConnectionOpenAck",
  () => [
    { no: 1, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "counterparty_connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "version", kind: "message", T: Version },
    { no: 4, name: "client_state", kind: "message", T: Any },
    { no: 5, name: "proof_height", kind: "message", T: Height },
    { no: 6, name: "proof_try", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 7, name: "proof_client", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 8, name: "proof_consensus", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 9, name: "consensus_height", kind: "message", T: Height },
    { no: 10, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgConnectionOpenAckResponse defines the Msg/ConnectionOpenAck response type.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenAckResponse
 */
export const MsgConnectionOpenAckResponse = proto3.makeMessageType(
  "ibc.core.connection.v1.MsgConnectionOpenAckResponse",
  [],
);

/**
 * MsgConnectionOpenConfirm defines a msg sent by a Relayer to Chain B to
 * acknowledge the change of connection state to OPEN on Chain A.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenConfirm
 */
export const MsgConnectionOpenConfirm = proto3.makeMessageType(
  "ibc.core.connection.v1.MsgConnectionOpenConfirm",
  () => [
    { no: 1, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "proof_ack", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "proof_height", kind: "message", T: Height },
    { no: 4, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgConnectionOpenConfirmResponse defines the Msg/ConnectionOpenConfirm
 * response type.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenConfirmResponse
 */
export const MsgConnectionOpenConfirmResponse = proto3.makeMessageType(
  "ibc.core.connection.v1.MsgConnectionOpenConfirmResponse",
  [],
);

