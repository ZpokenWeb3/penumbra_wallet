// source: chain.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.penumbra.chain.ChainParameters');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.penumbra.chain.Ratio');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.ChainParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.chain.ChainParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.ChainParameters.displayName = 'proto.penumbra.chain.ChainParameters';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.ChainParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.ChainParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.ChainParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.ChainParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    epochDuration: jspb.Message.getFieldWithDefault(msg, 2, 0),
    unbondingEpochs: jspb.Message.getFieldWithDefault(msg, 3, 0),
    activeValidatorLimit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    baseRewardRate: jspb.Message.getFieldWithDefault(msg, 9, 0),
    slashingPenaltyMisbehaviorBps: jspb.Message.getFieldWithDefault(msg, 5, 0),
    slashingPenaltyDowntimeBps: jspb.Message.getFieldWithDefault(msg, 10, 0),
    signedBlocksWindowLen: jspb.Message.getFieldWithDefault(msg, 11, 0),
    missedBlocksMaximum: jspb.Message.getFieldWithDefault(msg, 12, 0),
    ibcEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    inboundIcs20TransfersEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    outboundIcs20TransfersEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    proposalVotingBlocks: jspb.Message.getFieldWithDefault(msg, 20, 0),
    proposalDepositAmount: jspb.Message.getFieldWithDefault(msg, 21, 0),
    proposalValidQuorum: (f = msg.getProposalValidQuorum()) && proto.penumbra.chain.Ratio.toObject(includeInstance, f),
    proposalPassThreshold: (f = msg.getProposalPassThreshold()) && proto.penumbra.chain.Ratio.toObject(includeInstance, f),
    proposalVetoThreshold: (f = msg.getProposalVetoThreshold()) && proto.penumbra.chain.Ratio.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.ChainParameters}
 */
proto.penumbra.chain.ChainParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.ChainParameters;
  return proto.penumbra.chain.ChainParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.ChainParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.ChainParameters}
 */
proto.penumbra.chain.ChainParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEpochDuration(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnbondingEpochs(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setActiveValidatorLimit(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBaseRewardRate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlashingPenaltyMisbehaviorBps(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlashingPenaltyDowntimeBps(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSignedBlocksWindowLen(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMissedBlocksMaximum(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIbcEnabled(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInboundIcs20TransfersEnabled(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOutboundIcs20TransfersEnabled(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProposalVotingBlocks(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProposalDepositAmount(value);
      break;
    case 22:
      var value = new proto.penumbra.chain.Ratio;
      reader.readMessage(value,proto.penumbra.chain.Ratio.deserializeBinaryFromReader);
      msg.setProposalValidQuorum(value);
      break;
    case 23:
      var value = new proto.penumbra.chain.Ratio;
      reader.readMessage(value,proto.penumbra.chain.Ratio.deserializeBinaryFromReader);
      msg.setProposalPassThreshold(value);
      break;
    case 24:
      var value = new proto.penumbra.chain.Ratio;
      reader.readMessage(value,proto.penumbra.chain.Ratio.deserializeBinaryFromReader);
      msg.setProposalVetoThreshold(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.ChainParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.ChainParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.ChainParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.ChainParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEpochDuration();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getUnbondingEpochs();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getActiveValidatorLimit();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getBaseRewardRate();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getSlashingPenaltyMisbehaviorBps();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getSlashingPenaltyDowntimeBps();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getSignedBlocksWindowLen();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getMissedBlocksMaximum();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getIbcEnabled();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getInboundIcs20TransfersEnabled();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getOutboundIcs20TransfersEnabled();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getProposalVotingBlocks();
  if (f !== 0) {
    writer.writeUint64(
      20,
      f
    );
  }
  f = message.getProposalDepositAmount();
  if (f !== 0) {
    writer.writeUint64(
      21,
      f
    );
  }
  f = message.getProposalValidQuorum();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.penumbra.chain.Ratio.serializeBinaryToWriter
    );
  }
  f = message.getProposalPassThreshold();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.penumbra.chain.Ratio.serializeBinaryToWriter
    );
  }
  f = message.getProposalVetoThreshold();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.penumbra.chain.Ratio.serializeBinaryToWriter
    );
  }
};


/**
 * optional string chain_id = 1;
 * @return {string}
 */
proto.penumbra.chain.ChainParameters.prototype.getChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 epoch_duration = 2;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getEpochDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setEpochDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 unbonding_epochs = 3;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getUnbondingEpochs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setUnbondingEpochs = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 active_validator_limit = 4;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getActiveValidatorLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setActiveValidatorLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 base_reward_rate = 9;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getBaseRewardRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setBaseRewardRate = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 slashing_penalty_misbehavior_bps = 5;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getSlashingPenaltyMisbehaviorBps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setSlashingPenaltyMisbehaviorBps = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 slashing_penalty_downtime_bps = 10;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getSlashingPenaltyDowntimeBps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setSlashingPenaltyDowntimeBps = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 signed_blocks_window_len = 11;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getSignedBlocksWindowLen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setSignedBlocksWindowLen = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 missed_blocks_maximum = 12;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getMissedBlocksMaximum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setMissedBlocksMaximum = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional bool ibc_enabled = 6;
 * @return {boolean}
 */
proto.penumbra.chain.ChainParameters.prototype.getIbcEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setIbcEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool inbound_ics20_transfers_enabled = 7;
 * @return {boolean}
 */
proto.penumbra.chain.ChainParameters.prototype.getInboundIcs20TransfersEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setInboundIcs20TransfersEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool outbound_ics20_transfers_enabled = 8;
 * @return {boolean}
 */
proto.penumbra.chain.ChainParameters.prototype.getOutboundIcs20TransfersEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setOutboundIcs20TransfersEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional uint64 proposal_voting_blocks = 20;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getProposalVotingBlocks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setProposalVotingBlocks = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional uint64 proposal_deposit_amount = 21;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getProposalDepositAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setProposalDepositAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional Ratio proposal_valid_quorum = 22;
 * @return {?proto.penumbra.chain.Ratio}
 */
proto.penumbra.chain.ChainParameters.prototype.getProposalValidQuorum = function() {
  return /** @type{?proto.penumbra.chain.Ratio} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.Ratio, 22));
};


/**
 * @param {?proto.penumbra.chain.Ratio|undefined} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
*/
proto.penumbra.chain.ChainParameters.prototype.setProposalValidQuorum = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.clearProposalValidQuorum = function() {
  return this.setProposalValidQuorum(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.ChainParameters.prototype.hasProposalValidQuorum = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional Ratio proposal_pass_threshold = 23;
 * @return {?proto.penumbra.chain.Ratio}
 */
proto.penumbra.chain.ChainParameters.prototype.getProposalPassThreshold = function() {
  return /** @type{?proto.penumbra.chain.Ratio} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.Ratio, 23));
};


/**
 * @param {?proto.penumbra.chain.Ratio|undefined} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
*/
proto.penumbra.chain.ChainParameters.prototype.setProposalPassThreshold = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.clearProposalPassThreshold = function() {
  return this.setProposalPassThreshold(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.ChainParameters.prototype.hasProposalPassThreshold = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional Ratio proposal_veto_threshold = 24;
 * @return {?proto.penumbra.chain.Ratio}
 */
proto.penumbra.chain.ChainParameters.prototype.getProposalVetoThreshold = function() {
  return /** @type{?proto.penumbra.chain.Ratio} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.Ratio, 24));
};


/**
 * @param {?proto.penumbra.chain.Ratio|undefined} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
*/
proto.penumbra.chain.ChainParameters.prototype.setProposalVetoThreshold = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.clearProposalVetoThreshold = function() {
  return this.setProposalVetoThreshold(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.ChainParameters.prototype.hasProposalVetoThreshold = function() {
  return jspb.Message.getField(this, 24) != null;
};


