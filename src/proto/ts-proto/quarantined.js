// source: chain.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.penumbra.chain.Quarantined');
goog.provide('proto.penumbra.chain.Quarantined.EpochEntry');
goog.provide('proto.penumbra.chain.Quarantined.Scheduled');
goog.provide('proto.penumbra.chain.Quarantined.Unbonding');
goog.provide('proto.penumbra.chain.Quarantined.ValidatorEntry');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.penumbra.chain.AnnotatedNotePayload');
goog.require('proto.penumbra.crypto.IdentityKey');
goog.require('proto.penumbra.crypto.Nullifier');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.Quarantined = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.chain.Quarantined.repeatedFields_, null);
};
goog.inherits(proto.penumbra.chain.Quarantined, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.Quarantined.displayName = 'proto.penumbra.chain.Quarantined';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.Quarantined.Unbonding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.chain.Quarantined.Unbonding.repeatedFields_, null);
};
goog.inherits(proto.penumbra.chain.Quarantined.Unbonding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.Quarantined.Unbonding.displayName = 'proto.penumbra.chain.Quarantined.Unbonding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.Quarantined.ValidatorEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.chain.Quarantined.ValidatorEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.Quarantined.ValidatorEntry.displayName = 'proto.penumbra.chain.Quarantined.ValidatorEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.Quarantined.Scheduled = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.chain.Quarantined.Scheduled.repeatedFields_, null);
};
goog.inherits(proto.penumbra.chain.Quarantined.Scheduled, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.Quarantined.Scheduled.displayName = 'proto.penumbra.chain.Quarantined.Scheduled';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.Quarantined.EpochEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.chain.Quarantined.EpochEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.Quarantined.EpochEntry.displayName = 'proto.penumbra.chain.Quarantined.EpochEntry';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.chain.Quarantined.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.Quarantined.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.Quarantined.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.Quarantined} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.toObject = function(includeInstance, msg) {
  var f, obj = {
    perEpochList: jspb.Message.toObjectList(msg.getPerEpochList(),
    proto.penumbra.chain.Quarantined.EpochEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.Quarantined}
 */
proto.penumbra.chain.Quarantined.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.Quarantined;
  return proto.penumbra.chain.Quarantined.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.Quarantined} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.Quarantined}
 */
proto.penumbra.chain.Quarantined.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.chain.Quarantined.EpochEntry;
      reader.readMessage(value,proto.penumbra.chain.Quarantined.EpochEntry.deserializeBinaryFromReader);
      msg.addPerEpoch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.Quarantined.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.Quarantined.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.Quarantined} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPerEpochList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.penumbra.chain.Quarantined.EpochEntry.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.chain.Quarantined.Unbonding.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.Quarantined.Unbonding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.Quarantined.Unbonding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.Unbonding.toObject = function(includeInstance, msg) {
  var f, obj = {
    notePayloadsList: jspb.Message.toObjectList(msg.getNotePayloadsList(),
    proto.penumbra.chain.AnnotatedNotePayload.toObject, includeInstance),
    nullifiersList: jspb.Message.toObjectList(msg.getNullifiersList(),
    proto.penumbra.crypto.Nullifier.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.Quarantined.Unbonding}
 */
proto.penumbra.chain.Quarantined.Unbonding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.Quarantined.Unbonding;
  return proto.penumbra.chain.Quarantined.Unbonding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.Quarantined.Unbonding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.Quarantined.Unbonding}
 */
proto.penumbra.chain.Quarantined.Unbonding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.chain.AnnotatedNotePayload;
      reader.readMessage(value,proto.penumbra.chain.AnnotatedNotePayload.deserializeBinaryFromReader);
      msg.addNotePayloads(value);
      break;
    case 2:
      var value = new proto.penumbra.crypto.Nullifier;
      reader.readMessage(value,proto.penumbra.crypto.Nullifier.deserializeBinaryFromReader);
      msg.addNullifiers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.Quarantined.Unbonding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.Quarantined.Unbonding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.Unbonding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotePayloadsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.penumbra.chain.AnnotatedNotePayload.serializeBinaryToWriter
    );
  }
  f = message.getNullifiersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.penumbra.crypto.Nullifier.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AnnotatedNotePayload note_payloads = 1;
 * @return {!Array<!proto.penumbra.chain.AnnotatedNotePayload>}
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.getNotePayloadsList = function() {
  return /** @type{!Array<!proto.penumbra.chain.AnnotatedNotePayload>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.penumbra.chain.AnnotatedNotePayload, 1));
};


/**
 * @param {!Array<!proto.penumbra.chain.AnnotatedNotePayload>} value
 * @return {!proto.penumbra.chain.Quarantined.Unbonding} returns this
*/
proto.penumbra.chain.Quarantined.Unbonding.prototype.setNotePayloadsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.penumbra.chain.AnnotatedNotePayload=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.chain.AnnotatedNotePayload}
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.addNotePayloads = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.penumbra.chain.AnnotatedNotePayload, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.Quarantined.Unbonding} returns this
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.clearNotePayloadsList = function() {
  return this.setNotePayloadsList([]);
};


/**
 * repeated penumbra.crypto.Nullifier nullifiers = 2;
 * @return {!Array<!proto.penumbra.crypto.Nullifier>}
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.getNullifiersList = function() {
  return /** @type{!Array<!proto.penumbra.crypto.Nullifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.penumbra.crypto.Nullifier, 2));
};


/**
 * @param {!Array<!proto.penumbra.crypto.Nullifier>} value
 * @return {!proto.penumbra.chain.Quarantined.Unbonding} returns this
*/
proto.penumbra.chain.Quarantined.Unbonding.prototype.setNullifiersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.penumbra.crypto.Nullifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.crypto.Nullifier}
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.addNullifiers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.penumbra.crypto.Nullifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.Quarantined.Unbonding} returns this
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.clearNullifiersList = function() {
  return this.setNullifiersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.Quarantined.ValidatorEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.Quarantined.ValidatorEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    identityKey: (f = msg.getIdentityKey()) && proto.penumbra.crypto.IdentityKey.toObject(includeInstance, f),
    unbonding: (f = msg.getUnbonding()) && proto.penumbra.chain.Quarantined.Unbonding.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.Quarantined.ValidatorEntry}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.Quarantined.ValidatorEntry;
  return proto.penumbra.chain.Quarantined.ValidatorEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.Quarantined.ValidatorEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.Quarantined.ValidatorEntry}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.crypto.IdentityKey;
      reader.readMessage(value,proto.penumbra.crypto.IdentityKey.deserializeBinaryFromReader);
      msg.setIdentityKey(value);
      break;
    case 2:
      var value = new proto.penumbra.chain.Quarantined.Unbonding;
      reader.readMessage(value,proto.penumbra.chain.Quarantined.Unbonding.deserializeBinaryFromReader);
      msg.setUnbonding(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.Quarantined.ValidatorEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.Quarantined.ValidatorEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentityKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.crypto.IdentityKey.serializeBinaryToWriter
    );
  }
  f = message.getUnbonding();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.penumbra.chain.Quarantined.Unbonding.serializeBinaryToWriter
    );
  }
};


/**
 * optional penumbra.crypto.IdentityKey identity_key = 1;
 * @return {?proto.penumbra.crypto.IdentityKey}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.getIdentityKey = function() {
  return /** @type{?proto.penumbra.crypto.IdentityKey} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.crypto.IdentityKey, 1));
};


/**
 * @param {?proto.penumbra.crypto.IdentityKey|undefined} value
 * @return {!proto.penumbra.chain.Quarantined.ValidatorEntry} returns this
*/
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.setIdentityKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.Quarantined.ValidatorEntry} returns this
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.clearIdentityKey = function() {
  return this.setIdentityKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.hasIdentityKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Unbonding unbonding = 2;
 * @return {?proto.penumbra.chain.Quarantined.Unbonding}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.getUnbonding = function() {
  return /** @type{?proto.penumbra.chain.Quarantined.Unbonding} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.Quarantined.Unbonding, 2));
};


/**
 * @param {?proto.penumbra.chain.Quarantined.Unbonding|undefined} value
 * @return {!proto.penumbra.chain.Quarantined.ValidatorEntry} returns this
*/
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.setUnbonding = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.Quarantined.ValidatorEntry} returns this
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.clearUnbonding = function() {
  return this.setUnbonding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.hasUnbonding = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.chain.Quarantined.Scheduled.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.Quarantined.Scheduled.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.Quarantined.Scheduled.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.Quarantined.Scheduled} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.Scheduled.toObject = function(includeInstance, msg) {
  var f, obj = {
    perValidatorList: jspb.Message.toObjectList(msg.getPerValidatorList(),
    proto.penumbra.chain.Quarantined.ValidatorEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.Quarantined.Scheduled}
 */
proto.penumbra.chain.Quarantined.Scheduled.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.Quarantined.Scheduled;
  return proto.penumbra.chain.Quarantined.Scheduled.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.Quarantined.Scheduled} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.Quarantined.Scheduled}
 */
proto.penumbra.chain.Quarantined.Scheduled.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.chain.Quarantined.ValidatorEntry;
      reader.readMessage(value,proto.penumbra.chain.Quarantined.ValidatorEntry.deserializeBinaryFromReader);
      msg.addPerValidator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.Quarantined.Scheduled.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.Quarantined.Scheduled.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.Quarantined.Scheduled} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.Scheduled.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPerValidatorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.penumbra.chain.Quarantined.ValidatorEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ValidatorEntry per_validator = 1;
 * @return {!Array<!proto.penumbra.chain.Quarantined.ValidatorEntry>}
 */
proto.penumbra.chain.Quarantined.Scheduled.prototype.getPerValidatorList = function() {
  return /** @type{!Array<!proto.penumbra.chain.Quarantined.ValidatorEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.penumbra.chain.Quarantined.ValidatorEntry, 1));
};


/**
 * @param {!Array<!proto.penumbra.chain.Quarantined.ValidatorEntry>} value
 * @return {!proto.penumbra.chain.Quarantined.Scheduled} returns this
*/
proto.penumbra.chain.Quarantined.Scheduled.prototype.setPerValidatorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.penumbra.chain.Quarantined.ValidatorEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.chain.Quarantined.ValidatorEntry}
 */
proto.penumbra.chain.Quarantined.Scheduled.prototype.addPerValidator = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.penumbra.chain.Quarantined.ValidatorEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.Quarantined.Scheduled} returns this
 */
proto.penumbra.chain.Quarantined.Scheduled.prototype.clearPerValidatorList = function() {
  return this.setPerValidatorList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.Quarantined.EpochEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.Quarantined.EpochEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.Quarantined.EpochEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.EpochEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    unbondingEpoch: jspb.Message.getFieldWithDefault(msg, 1, 0),
    scheduled: (f = msg.getScheduled()) && proto.penumbra.chain.Quarantined.Scheduled.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.Quarantined.EpochEntry}
 */
proto.penumbra.chain.Quarantined.EpochEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.Quarantined.EpochEntry;
  return proto.penumbra.chain.Quarantined.EpochEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.Quarantined.EpochEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.Quarantined.EpochEntry}
 */
proto.penumbra.chain.Quarantined.EpochEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnbondingEpoch(value);
      break;
    case 2:
      var value = new proto.penumbra.chain.Quarantined.Scheduled;
      reader.readMessage(value,proto.penumbra.chain.Quarantined.Scheduled.deserializeBinaryFromReader);
      msg.setScheduled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.Quarantined.EpochEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.Quarantined.EpochEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.Quarantined.EpochEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.EpochEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnbondingEpoch();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getScheduled();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.penumbra.chain.Quarantined.Scheduled.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 unbonding_epoch = 1;
 * @return {number}
 */
proto.penumbra.chain.Quarantined.EpochEntry.prototype.getUnbondingEpoch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.Quarantined.EpochEntry} returns this
 */
proto.penumbra.chain.Quarantined.EpochEntry.prototype.setUnbondingEpoch = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Scheduled scheduled = 2;
 * @return {?proto.penumbra.chain.Quarantined.Scheduled}
 */
proto.penumbra.chain.Quarantined.EpochEntry.prototype.getScheduled = function() {
  return /** @type{?proto.penumbra.chain.Quarantined.Scheduled} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.Quarantined.Scheduled, 2));
};


/**
 * @param {?proto.penumbra.chain.Quarantined.Scheduled|undefined} value
 * @return {!proto.penumbra.chain.Quarantined.EpochEntry} returns this
*/
proto.penumbra.chain.Quarantined.EpochEntry.prototype.setScheduled = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.Quarantined.EpochEntry} returns this
 */
proto.penumbra.chain.Quarantined.EpochEntry.prototype.clearScheduled = function() {
  return this.setScheduled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.Quarantined.EpochEntry.prototype.hasScheduled = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated EpochEntry per_epoch = 1;
 * @return {!Array<!proto.penumbra.chain.Quarantined.EpochEntry>}
 */
proto.penumbra.chain.Quarantined.prototype.getPerEpochList = function() {
  return /** @type{!Array<!proto.penumbra.chain.Quarantined.EpochEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.penumbra.chain.Quarantined.EpochEntry, 1));
};


/**
 * @param {!Array<!proto.penumbra.chain.Quarantined.EpochEntry>} value
 * @return {!proto.penumbra.chain.Quarantined} returns this
*/
proto.penumbra.chain.Quarantined.prototype.setPerEpochList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.penumbra.chain.Quarantined.EpochEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.chain.Quarantined.EpochEntry}
 */
proto.penumbra.chain.Quarantined.prototype.addPerEpoch = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.penumbra.chain.Quarantined.EpochEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.Quarantined} returns this
 */
proto.penumbra.chain.Quarantined.prototype.clearPerEpochList = function() {
  return this.setPerEpochList([]);
};


