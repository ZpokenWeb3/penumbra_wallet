// source: ibc.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.penumbra.ibc.IBCAction');
goog.provide('proto.penumbra.ibc.IBCAction.ActionCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.ibc.core.channel.v1.MsgAcknowledgement');
goog.require('proto.ibc.core.channel.v1.MsgChannelCloseConfirm');
goog.require('proto.ibc.core.channel.v1.MsgChannelCloseInit');
goog.require('proto.ibc.core.channel.v1.MsgChannelOpenAck');
goog.require('proto.ibc.core.channel.v1.MsgChannelOpenConfirm');
goog.require('proto.ibc.core.channel.v1.MsgChannelOpenInit');
goog.require('proto.ibc.core.channel.v1.MsgChannelOpenTry');
goog.require('proto.ibc.core.channel.v1.MsgRecvPacket');
goog.require('proto.ibc.core.channel.v1.MsgTimeout');
goog.require('proto.ibc.core.client.v1.MsgCreateClient');
goog.require('proto.ibc.core.client.v1.MsgSubmitMisbehaviour');
goog.require('proto.ibc.core.client.v1.MsgUpdateClient');
goog.require('proto.ibc.core.client.v1.MsgUpgradeClient');
goog.require('proto.ibc.core.connection.v1.MsgConnectionOpenAck');
goog.require('proto.ibc.core.connection.v1.MsgConnectionOpenConfirm');
goog.require('proto.ibc.core.connection.v1.MsgConnectionOpenInit');
goog.require('proto.ibc.core.connection.v1.MsgConnectionOpenTry');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.ibc.IBCAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.penumbra.ibc.IBCAction.oneofGroups_);
};
goog.inherits(proto.penumbra.ibc.IBCAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.ibc.IBCAction.displayName = 'proto.penumbra.ibc.IBCAction';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.penumbra.ibc.IBCAction.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]];

/**
 * @enum {number}
 */
proto.penumbra.ibc.IBCAction.ActionCase = {
  ACTION_NOT_SET: 0,
  CONNECTIONOPENINIT: 1,
  CONNECTIONOPENTRY: 2,
  CONNECTIONOPENACK: 3,
  CONNECTIONOPENCONFIRM: 4,
  CHANNELOPENINIT: 5,
  CHANNELOPENTRY: 6,
  CHANNELOPENACK: 7,
  CHANNELOPENCONFIRM: 8,
  CHANNELCLOSEINIT: 9,
  CHANNELCLOSECONFIRM: 10,
  RECVPACKET: 11,
  TIMEOUT: 12,
  ACKNOWLEDGEMENT: 13,
  CREATECLIENT: 14,
  UPDATECLIENT: 15,
  UPGRADECLIENT: 16,
  SUBMITMISBEHAVIOUR: 17
};

/**
 * @return {proto.penumbra.ibc.IBCAction.ActionCase}
 */
proto.penumbra.ibc.IBCAction.prototype.getActionCase = function() {
  return /** @type {proto.penumbra.ibc.IBCAction.ActionCase} */(jspb.Message.computeOneofCase(this, proto.penumbra.ibc.IBCAction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.ibc.IBCAction.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.ibc.IBCAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.ibc.IBCAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.ibc.IBCAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionopeninit: (f = msg.getConnectionopeninit()) && proto.ibc.core.connection.v1.MsgConnectionOpenInit.toObject(includeInstance, f),
    connectionopentry: (f = msg.getConnectionopentry()) && proto.ibc.core.connection.v1.MsgConnectionOpenTry.toObject(includeInstance, f),
    connectionopenack: (f = msg.getConnectionopenack()) && proto.ibc.core.connection.v1.MsgConnectionOpenAck.toObject(includeInstance, f),
    connectionopenconfirm: (f = msg.getConnectionopenconfirm()) && proto.ibc.core.connection.v1.MsgConnectionOpenConfirm.toObject(includeInstance, f),
    channelopeninit: (f = msg.getChannelopeninit()) && proto.ibc.core.channel.v1.MsgChannelOpenInit.toObject(includeInstance, f),
    channelopentry: (f = msg.getChannelopentry()) && proto.ibc.core.channel.v1.MsgChannelOpenTry.toObject(includeInstance, f),
    channelopenack: (f = msg.getChannelopenack()) && proto.ibc.core.channel.v1.MsgChannelOpenAck.toObject(includeInstance, f),
    channelopenconfirm: (f = msg.getChannelopenconfirm()) && proto.ibc.core.channel.v1.MsgChannelOpenConfirm.toObject(includeInstance, f),
    channelcloseinit: (f = msg.getChannelcloseinit()) && proto.ibc.core.channel.v1.MsgChannelCloseInit.toObject(includeInstance, f),
    channelcloseconfirm: (f = msg.getChannelcloseconfirm()) && proto.ibc.core.channel.v1.MsgChannelCloseConfirm.toObject(includeInstance, f),
    recvpacket: (f = msg.getRecvpacket()) && proto.ibc.core.channel.v1.MsgRecvPacket.toObject(includeInstance, f),
    timeout: (f = msg.getTimeout()) && proto.ibc.core.channel.v1.MsgTimeout.toObject(includeInstance, f),
    acknowledgement: (f = msg.getAcknowledgement()) && proto.ibc.core.channel.v1.MsgAcknowledgement.toObject(includeInstance, f),
    createclient: (f = msg.getCreateclient()) && proto.ibc.core.client.v1.MsgCreateClient.toObject(includeInstance, f),
    updateclient: (f = msg.getUpdateclient()) && proto.ibc.core.client.v1.MsgUpdateClient.toObject(includeInstance, f),
    upgradeclient: (f = msg.getUpgradeclient()) && proto.ibc.core.client.v1.MsgUpgradeClient.toObject(includeInstance, f),
    submitmisbehaviour: (f = msg.getSubmitmisbehaviour()) && proto.ibc.core.client.v1.MsgSubmitMisbehaviour.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.ibc.IBCAction}
 */
proto.penumbra.ibc.IBCAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.ibc.IBCAction;
  return proto.penumbra.ibc.IBCAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.ibc.IBCAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.ibc.IBCAction}
 */
proto.penumbra.ibc.IBCAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ibc.core.connection.v1.MsgConnectionOpenInit;
      reader.readMessage(value,proto.ibc.core.connection.v1.MsgConnectionOpenInit.deserializeBinaryFromReader);
      msg.setConnectionopeninit(value);
      break;
    case 2:
      var value = new proto.ibc.core.connection.v1.MsgConnectionOpenTry;
      reader.readMessage(value,proto.ibc.core.connection.v1.MsgConnectionOpenTry.deserializeBinaryFromReader);
      msg.setConnectionopentry(value);
      break;
    case 3:
      var value = new proto.ibc.core.connection.v1.MsgConnectionOpenAck;
      reader.readMessage(value,proto.ibc.core.connection.v1.MsgConnectionOpenAck.deserializeBinaryFromReader);
      msg.setConnectionopenack(value);
      break;
    case 4:
      var value = new proto.ibc.core.connection.v1.MsgConnectionOpenConfirm;
      reader.readMessage(value,proto.ibc.core.connection.v1.MsgConnectionOpenConfirm.deserializeBinaryFromReader);
      msg.setConnectionopenconfirm(value);
      break;
    case 5:
      var value = new proto.ibc.core.channel.v1.MsgChannelOpenInit;
      reader.readMessage(value,proto.ibc.core.channel.v1.MsgChannelOpenInit.deserializeBinaryFromReader);
      msg.setChannelopeninit(value);
      break;
    case 6:
      var value = new proto.ibc.core.channel.v1.MsgChannelOpenTry;
      reader.readMessage(value,proto.ibc.core.channel.v1.MsgChannelOpenTry.deserializeBinaryFromReader);
      msg.setChannelopentry(value);
      break;
    case 7:
      var value = new proto.ibc.core.channel.v1.MsgChannelOpenAck;
      reader.readMessage(value,proto.ibc.core.channel.v1.MsgChannelOpenAck.deserializeBinaryFromReader);
      msg.setChannelopenack(value);
      break;
    case 8:
      var value = new proto.ibc.core.channel.v1.MsgChannelOpenConfirm;
      reader.readMessage(value,proto.ibc.core.channel.v1.MsgChannelOpenConfirm.deserializeBinaryFromReader);
      msg.setChannelopenconfirm(value);
      break;
    case 9:
      var value = new proto.ibc.core.channel.v1.MsgChannelCloseInit;
      reader.readMessage(value,proto.ibc.core.channel.v1.MsgChannelCloseInit.deserializeBinaryFromReader);
      msg.setChannelcloseinit(value);
      break;
    case 10:
      var value = new proto.ibc.core.channel.v1.MsgChannelCloseConfirm;
      reader.readMessage(value,proto.ibc.core.channel.v1.MsgChannelCloseConfirm.deserializeBinaryFromReader);
      msg.setChannelcloseconfirm(value);
      break;
    case 11:
      var value = new proto.ibc.core.channel.v1.MsgRecvPacket;
      reader.readMessage(value,proto.ibc.core.channel.v1.MsgRecvPacket.deserializeBinaryFromReader);
      msg.setRecvpacket(value);
      break;
    case 12:
      var value = new proto.ibc.core.channel.v1.MsgTimeout;
      reader.readMessage(value,proto.ibc.core.channel.v1.MsgTimeout.deserializeBinaryFromReader);
      msg.setTimeout(value);
      break;
    case 13:
      var value = new proto.ibc.core.channel.v1.MsgAcknowledgement;
      reader.readMessage(value,proto.ibc.core.channel.v1.MsgAcknowledgement.deserializeBinaryFromReader);
      msg.setAcknowledgement(value);
      break;
    case 14:
      var value = new proto.ibc.core.client.v1.MsgCreateClient;
      reader.readMessage(value,proto.ibc.core.client.v1.MsgCreateClient.deserializeBinaryFromReader);
      msg.setCreateclient(value);
      break;
    case 15:
      var value = new proto.ibc.core.client.v1.MsgUpdateClient;
      reader.readMessage(value,proto.ibc.core.client.v1.MsgUpdateClient.deserializeBinaryFromReader);
      msg.setUpdateclient(value);
      break;
    case 16:
      var value = new proto.ibc.core.client.v1.MsgUpgradeClient;
      reader.readMessage(value,proto.ibc.core.client.v1.MsgUpgradeClient.deserializeBinaryFromReader);
      msg.setUpgradeclient(value);
      break;
    case 17:
      var value = new proto.ibc.core.client.v1.MsgSubmitMisbehaviour;
      reader.readMessage(value,proto.ibc.core.client.v1.MsgSubmitMisbehaviour.deserializeBinaryFromReader);
      msg.setSubmitmisbehaviour(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.ibc.IBCAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.ibc.IBCAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.ibc.IBCAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.ibc.IBCAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionopeninit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ibc.core.connection.v1.MsgConnectionOpenInit.serializeBinaryToWriter
    );
  }
  f = message.getConnectionopentry();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ibc.core.connection.v1.MsgConnectionOpenTry.serializeBinaryToWriter
    );
  }
  f = message.getConnectionopenack();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ibc.core.connection.v1.MsgConnectionOpenAck.serializeBinaryToWriter
    );
  }
  f = message.getConnectionopenconfirm();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ibc.core.connection.v1.MsgConnectionOpenConfirm.serializeBinaryToWriter
    );
  }
  f = message.getChannelopeninit();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ibc.core.channel.v1.MsgChannelOpenInit.serializeBinaryToWriter
    );
  }
  f = message.getChannelopentry();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ibc.core.channel.v1.MsgChannelOpenTry.serializeBinaryToWriter
    );
  }
  f = message.getChannelopenack();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ibc.core.channel.v1.MsgChannelOpenAck.serializeBinaryToWriter
    );
  }
  f = message.getChannelopenconfirm();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ibc.core.channel.v1.MsgChannelOpenConfirm.serializeBinaryToWriter
    );
  }
  f = message.getChannelcloseinit();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.ibc.core.channel.v1.MsgChannelCloseInit.serializeBinaryToWriter
    );
  }
  f = message.getChannelcloseconfirm();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.ibc.core.channel.v1.MsgChannelCloseConfirm.serializeBinaryToWriter
    );
  }
  f = message.getRecvpacket();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.ibc.core.channel.v1.MsgRecvPacket.serializeBinaryToWriter
    );
  }
  f = message.getTimeout();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.ibc.core.channel.v1.MsgTimeout.serializeBinaryToWriter
    );
  }
  f = message.getAcknowledgement();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.ibc.core.channel.v1.MsgAcknowledgement.serializeBinaryToWriter
    );
  }
  f = message.getCreateclient();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.ibc.core.client.v1.MsgCreateClient.serializeBinaryToWriter
    );
  }
  f = message.getUpdateclient();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.ibc.core.client.v1.MsgUpdateClient.serializeBinaryToWriter
    );
  }
  f = message.getUpgradeclient();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.ibc.core.client.v1.MsgUpgradeClient.serializeBinaryToWriter
    );
  }
  f = message.getSubmitmisbehaviour();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.ibc.core.client.v1.MsgSubmitMisbehaviour.serializeBinaryToWriter
    );
  }
};


/**
 * optional ibc.core.connection.v1.MsgConnectionOpenInit connectionOpenInit = 1;
 * @return {?proto.ibc.core.connection.v1.MsgConnectionOpenInit}
 */
proto.penumbra.ibc.IBCAction.prototype.getConnectionopeninit = function() {
  return /** @type{?proto.ibc.core.connection.v1.MsgConnectionOpenInit} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.connection.v1.MsgConnectionOpenInit, 1));
};


/**
 * @param {?proto.ibc.core.connection.v1.MsgConnectionOpenInit|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setConnectionopeninit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearConnectionopeninit = function() {
  return this.setConnectionopeninit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasConnectionopeninit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ibc.core.connection.v1.MsgConnectionOpenTry connectionOpenTry = 2;
 * @return {?proto.ibc.core.connection.v1.MsgConnectionOpenTry}
 */
proto.penumbra.ibc.IBCAction.prototype.getConnectionopentry = function() {
  return /** @type{?proto.ibc.core.connection.v1.MsgConnectionOpenTry} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.connection.v1.MsgConnectionOpenTry, 2));
};


/**
 * @param {?proto.ibc.core.connection.v1.MsgConnectionOpenTry|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setConnectionopentry = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearConnectionopentry = function() {
  return this.setConnectionopentry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasConnectionopentry = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ibc.core.connection.v1.MsgConnectionOpenAck connectionOpenAck = 3;
 * @return {?proto.ibc.core.connection.v1.MsgConnectionOpenAck}
 */
proto.penumbra.ibc.IBCAction.prototype.getConnectionopenack = function() {
  return /** @type{?proto.ibc.core.connection.v1.MsgConnectionOpenAck} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.connection.v1.MsgConnectionOpenAck, 3));
};


/**
 * @param {?proto.ibc.core.connection.v1.MsgConnectionOpenAck|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setConnectionopenack = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearConnectionopenack = function() {
  return this.setConnectionopenack(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasConnectionopenack = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ibc.core.connection.v1.MsgConnectionOpenConfirm connectionOpenConfirm = 4;
 * @return {?proto.ibc.core.connection.v1.MsgConnectionOpenConfirm}
 */
proto.penumbra.ibc.IBCAction.prototype.getConnectionopenconfirm = function() {
  return /** @type{?proto.ibc.core.connection.v1.MsgConnectionOpenConfirm} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.connection.v1.MsgConnectionOpenConfirm, 4));
};


/**
 * @param {?proto.ibc.core.connection.v1.MsgConnectionOpenConfirm|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setConnectionopenconfirm = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearConnectionopenconfirm = function() {
  return this.setConnectionopenconfirm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasConnectionopenconfirm = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ibc.core.channel.v1.MsgChannelOpenInit channelOpenInit = 5;
 * @return {?proto.ibc.core.channel.v1.MsgChannelOpenInit}
 */
proto.penumbra.ibc.IBCAction.prototype.getChannelopeninit = function() {
  return /** @type{?proto.ibc.core.channel.v1.MsgChannelOpenInit} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.channel.v1.MsgChannelOpenInit, 5));
};


/**
 * @param {?proto.ibc.core.channel.v1.MsgChannelOpenInit|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setChannelopeninit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearChannelopeninit = function() {
  return this.setChannelopeninit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasChannelopeninit = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ibc.core.channel.v1.MsgChannelOpenTry channelOpenTry = 6;
 * @return {?proto.ibc.core.channel.v1.MsgChannelOpenTry}
 */
proto.penumbra.ibc.IBCAction.prototype.getChannelopentry = function() {
  return /** @type{?proto.ibc.core.channel.v1.MsgChannelOpenTry} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.channel.v1.MsgChannelOpenTry, 6));
};


/**
 * @param {?proto.ibc.core.channel.v1.MsgChannelOpenTry|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setChannelopentry = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearChannelopentry = function() {
  return this.setChannelopentry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasChannelopentry = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ibc.core.channel.v1.MsgChannelOpenAck channelOpenAck = 7;
 * @return {?proto.ibc.core.channel.v1.MsgChannelOpenAck}
 */
proto.penumbra.ibc.IBCAction.prototype.getChannelopenack = function() {
  return /** @type{?proto.ibc.core.channel.v1.MsgChannelOpenAck} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.channel.v1.MsgChannelOpenAck, 7));
};


/**
 * @param {?proto.ibc.core.channel.v1.MsgChannelOpenAck|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setChannelopenack = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearChannelopenack = function() {
  return this.setChannelopenack(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasChannelopenack = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ibc.core.channel.v1.MsgChannelOpenConfirm channelOpenConfirm = 8;
 * @return {?proto.ibc.core.channel.v1.MsgChannelOpenConfirm}
 */
proto.penumbra.ibc.IBCAction.prototype.getChannelopenconfirm = function() {
  return /** @type{?proto.ibc.core.channel.v1.MsgChannelOpenConfirm} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.channel.v1.MsgChannelOpenConfirm, 8));
};


/**
 * @param {?proto.ibc.core.channel.v1.MsgChannelOpenConfirm|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setChannelopenconfirm = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearChannelopenconfirm = function() {
  return this.setChannelopenconfirm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasChannelopenconfirm = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ibc.core.channel.v1.MsgChannelCloseInit channelCloseInit = 9;
 * @return {?proto.ibc.core.channel.v1.MsgChannelCloseInit}
 */
proto.penumbra.ibc.IBCAction.prototype.getChannelcloseinit = function() {
  return /** @type{?proto.ibc.core.channel.v1.MsgChannelCloseInit} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.channel.v1.MsgChannelCloseInit, 9));
};


/**
 * @param {?proto.ibc.core.channel.v1.MsgChannelCloseInit|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setChannelcloseinit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearChannelcloseinit = function() {
  return this.setChannelcloseinit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasChannelcloseinit = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ibc.core.channel.v1.MsgChannelCloseConfirm channelCloseConfirm = 10;
 * @return {?proto.ibc.core.channel.v1.MsgChannelCloseConfirm}
 */
proto.penumbra.ibc.IBCAction.prototype.getChannelcloseconfirm = function() {
  return /** @type{?proto.ibc.core.channel.v1.MsgChannelCloseConfirm} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.channel.v1.MsgChannelCloseConfirm, 10));
};


/**
 * @param {?proto.ibc.core.channel.v1.MsgChannelCloseConfirm|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setChannelcloseconfirm = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearChannelcloseconfirm = function() {
  return this.setChannelcloseconfirm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasChannelcloseconfirm = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ibc.core.channel.v1.MsgRecvPacket recvPacket = 11;
 * @return {?proto.ibc.core.channel.v1.MsgRecvPacket}
 */
proto.penumbra.ibc.IBCAction.prototype.getRecvpacket = function() {
  return /** @type{?proto.ibc.core.channel.v1.MsgRecvPacket} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.channel.v1.MsgRecvPacket, 11));
};


/**
 * @param {?proto.ibc.core.channel.v1.MsgRecvPacket|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setRecvpacket = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearRecvpacket = function() {
  return this.setRecvpacket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasRecvpacket = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ibc.core.channel.v1.MsgTimeout timeout = 12;
 * @return {?proto.ibc.core.channel.v1.MsgTimeout}
 */
proto.penumbra.ibc.IBCAction.prototype.getTimeout = function() {
  return /** @type{?proto.ibc.core.channel.v1.MsgTimeout} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.channel.v1.MsgTimeout, 12));
};


/**
 * @param {?proto.ibc.core.channel.v1.MsgTimeout|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setTimeout = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearTimeout = function() {
  return this.setTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional ibc.core.channel.v1.MsgAcknowledgement acknowledgement = 13;
 * @return {?proto.ibc.core.channel.v1.MsgAcknowledgement}
 */
proto.penumbra.ibc.IBCAction.prototype.getAcknowledgement = function() {
  return /** @type{?proto.ibc.core.channel.v1.MsgAcknowledgement} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.channel.v1.MsgAcknowledgement, 13));
};


/**
 * @param {?proto.ibc.core.channel.v1.MsgAcknowledgement|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setAcknowledgement = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearAcknowledgement = function() {
  return this.setAcknowledgement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasAcknowledgement = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ibc.core.client.v1.MsgCreateClient createClient = 14;
 * @return {?proto.ibc.core.client.v1.MsgCreateClient}
 */
proto.penumbra.ibc.IBCAction.prototype.getCreateclient = function() {
  return /** @type{?proto.ibc.core.client.v1.MsgCreateClient} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.client.v1.MsgCreateClient, 14));
};


/**
 * @param {?proto.ibc.core.client.v1.MsgCreateClient|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setCreateclient = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearCreateclient = function() {
  return this.setCreateclient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasCreateclient = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional ibc.core.client.v1.MsgUpdateClient updateClient = 15;
 * @return {?proto.ibc.core.client.v1.MsgUpdateClient}
 */
proto.penumbra.ibc.IBCAction.prototype.getUpdateclient = function() {
  return /** @type{?proto.ibc.core.client.v1.MsgUpdateClient} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.client.v1.MsgUpdateClient, 15));
};


/**
 * @param {?proto.ibc.core.client.v1.MsgUpdateClient|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setUpdateclient = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearUpdateclient = function() {
  return this.setUpdateclient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasUpdateclient = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional ibc.core.client.v1.MsgUpgradeClient upgradeClient = 16;
 * @return {?proto.ibc.core.client.v1.MsgUpgradeClient}
 */
proto.penumbra.ibc.IBCAction.prototype.getUpgradeclient = function() {
  return /** @type{?proto.ibc.core.client.v1.MsgUpgradeClient} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.client.v1.MsgUpgradeClient, 16));
};


/**
 * @param {?proto.ibc.core.client.v1.MsgUpgradeClient|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setUpgradeclient = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearUpgradeclient = function() {
  return this.setUpgradeclient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasUpgradeclient = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional ibc.core.client.v1.MsgSubmitMisbehaviour submitMisbehaviour = 17;
 * @return {?proto.ibc.core.client.v1.MsgSubmitMisbehaviour}
 */
proto.penumbra.ibc.IBCAction.prototype.getSubmitmisbehaviour = function() {
  return /** @type{?proto.ibc.core.client.v1.MsgSubmitMisbehaviour} */ (
    jspb.Message.getWrapperField(this, proto.ibc.core.client.v1.MsgSubmitMisbehaviour, 17));
};


/**
 * @param {?proto.ibc.core.client.v1.MsgSubmitMisbehaviour|undefined} value
 * @return {!proto.penumbra.ibc.IBCAction} returns this
*/
proto.penumbra.ibc.IBCAction.prototype.setSubmitmisbehaviour = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.penumbra.ibc.IBCAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.ibc.IBCAction} returns this
 */
proto.penumbra.ibc.IBCAction.prototype.clearSubmitmisbehaviour = function() {
  return this.setSubmitmisbehaviour(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.ibc.IBCAction.prototype.hasSubmitmisbehaviour = function() {
  return jspb.Message.getField(this, 17) != null;
};


