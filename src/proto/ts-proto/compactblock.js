// source: chain.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.penumbra.chain.CompactBlock');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.penumbra.chain.AnnotatedNotePayload');
goog.require('proto.penumbra.chain.FmdParameters');
goog.require('proto.penumbra.chain.Quarantined');
goog.require('proto.penumbra.crypto.IdentityKey');
goog.require('proto.penumbra.crypto.MerkleRoot');
goog.require('proto.penumbra.crypto.Nullifier');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.CompactBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.chain.CompactBlock.repeatedFields_, null);
};
goog.inherits(proto.penumbra.chain.CompactBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.CompactBlock.displayName = 'proto.penumbra.chain.CompactBlock';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.chain.CompactBlock.repeatedFields_ = [2,3,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.CompactBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.CompactBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.CompactBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.CompactBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0),
    notePayloadsList: jspb.Message.toObjectList(msg.getNotePayloadsList(),
    proto.penumbra.chain.AnnotatedNotePayload.toObject, includeInstance),
    nullifiersList: jspb.Message.toObjectList(msg.getNullifiersList(),
    proto.penumbra.crypto.Nullifier.toObject, includeInstance),
    blockRoot: (f = msg.getBlockRoot()) && proto.penumbra.crypto.MerkleRoot.toObject(includeInstance, f),
    epochRoot: (f = msg.getEpochRoot()) && proto.penumbra.crypto.MerkleRoot.toObject(includeInstance, f),
    quarantined: (f = msg.getQuarantined()) && proto.penumbra.chain.Quarantined.toObject(includeInstance, f),
    slashedList: jspb.Message.toObjectList(msg.getSlashedList(),
    proto.penumbra.crypto.IdentityKey.toObject, includeInstance),
    proposalStarted: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    fmdParameters: (f = msg.getFmdParameters()) && proto.penumbra.chain.FmdParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.CompactBlock}
 */
proto.penumbra.chain.CompactBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.CompactBlock;
  return proto.penumbra.chain.CompactBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.CompactBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.CompactBlock}
 */
proto.penumbra.chain.CompactBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHeight(value);
      break;
    case 2:
      var value = new proto.penumbra.chain.AnnotatedNotePayload;
      reader.readMessage(value,proto.penumbra.chain.AnnotatedNotePayload.deserializeBinaryFromReader);
      msg.addNotePayloads(value);
      break;
    case 3:
      var value = new proto.penumbra.crypto.Nullifier;
      reader.readMessage(value,proto.penumbra.crypto.Nullifier.deserializeBinaryFromReader);
      msg.addNullifiers(value);
      break;
    case 4:
      var value = new proto.penumbra.crypto.MerkleRoot;
      reader.readMessage(value,proto.penumbra.crypto.MerkleRoot.deserializeBinaryFromReader);
      msg.setBlockRoot(value);
      break;
    case 5:
      var value = new proto.penumbra.crypto.MerkleRoot;
      reader.readMessage(value,proto.penumbra.crypto.MerkleRoot.deserializeBinaryFromReader);
      msg.setEpochRoot(value);
      break;
    case 6:
      var value = new proto.penumbra.chain.Quarantined;
      reader.readMessage(value,proto.penumbra.chain.Quarantined.deserializeBinaryFromReader);
      msg.setQuarantined(value);
      break;
    case 16:
      var value = new proto.penumbra.crypto.IdentityKey;
      reader.readMessage(value,proto.penumbra.crypto.IdentityKey.deserializeBinaryFromReader);
      msg.addSlashed(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProposalStarted(value);
      break;
    case 100:
      var value = new proto.penumbra.chain.FmdParameters;
      reader.readMessage(value,proto.penumbra.chain.FmdParameters.deserializeBinaryFromReader);
      msg.setFmdParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.CompactBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.CompactBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.CompactBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.CompactBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getNotePayloadsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.penumbra.chain.AnnotatedNotePayload.serializeBinaryToWriter
    );
  }
  f = message.getNullifiersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.penumbra.crypto.Nullifier.serializeBinaryToWriter
    );
  }
  f = message.getBlockRoot();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.penumbra.crypto.MerkleRoot.serializeBinaryToWriter
    );
  }
  f = message.getEpochRoot();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.penumbra.crypto.MerkleRoot.serializeBinaryToWriter
    );
  }
  f = message.getQuarantined();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.penumbra.chain.Quarantined.serializeBinaryToWriter
    );
  }
  f = message.getSlashedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.penumbra.crypto.IdentityKey.serializeBinaryToWriter
    );
  }
  f = message.getProposalStarted();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getFmdParameters();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.penumbra.chain.FmdParameters.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 height = 1;
 * @return {number}
 */
proto.penumbra.chain.CompactBlock.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated AnnotatedNotePayload note_payloads = 2;
 * @return {!Array<!proto.penumbra.chain.AnnotatedNotePayload>}
 */
proto.penumbra.chain.CompactBlock.prototype.getNotePayloadsList = function() {
  return /** @type{!Array<!proto.penumbra.chain.AnnotatedNotePayload>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.penumbra.chain.AnnotatedNotePayload, 2));
};


/**
 * @param {!Array<!proto.penumbra.chain.AnnotatedNotePayload>} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
*/
proto.penumbra.chain.CompactBlock.prototype.setNotePayloadsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.penumbra.chain.AnnotatedNotePayload=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.chain.AnnotatedNotePayload}
 */
proto.penumbra.chain.CompactBlock.prototype.addNotePayloads = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.penumbra.chain.AnnotatedNotePayload, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.clearNotePayloadsList = function() {
  return this.setNotePayloadsList([]);
};


/**
 * repeated penumbra.crypto.Nullifier nullifiers = 3;
 * @return {!Array<!proto.penumbra.crypto.Nullifier>}
 */
proto.penumbra.chain.CompactBlock.prototype.getNullifiersList = function() {
  return /** @type{!Array<!proto.penumbra.crypto.Nullifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.penumbra.crypto.Nullifier, 3));
};


/**
 * @param {!Array<!proto.penumbra.crypto.Nullifier>} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
*/
proto.penumbra.chain.CompactBlock.prototype.setNullifiersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.penumbra.crypto.Nullifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.crypto.Nullifier}
 */
proto.penumbra.chain.CompactBlock.prototype.addNullifiers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.penumbra.crypto.Nullifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.clearNullifiersList = function() {
  return this.setNullifiersList([]);
};


/**
 * optional penumbra.crypto.MerkleRoot block_root = 4;
 * @return {?proto.penumbra.crypto.MerkleRoot}
 */
proto.penumbra.chain.CompactBlock.prototype.getBlockRoot = function() {
  return /** @type{?proto.penumbra.crypto.MerkleRoot} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.crypto.MerkleRoot, 4));
};


/**
 * @param {?proto.penumbra.crypto.MerkleRoot|undefined} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
*/
proto.penumbra.chain.CompactBlock.prototype.setBlockRoot = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.clearBlockRoot = function() {
  return this.setBlockRoot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.CompactBlock.prototype.hasBlockRoot = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional penumbra.crypto.MerkleRoot epoch_root = 5;
 * @return {?proto.penumbra.crypto.MerkleRoot}
 */
proto.penumbra.chain.CompactBlock.prototype.getEpochRoot = function() {
  return /** @type{?proto.penumbra.crypto.MerkleRoot} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.crypto.MerkleRoot, 5));
};


/**
 * @param {?proto.penumbra.crypto.MerkleRoot|undefined} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
*/
proto.penumbra.chain.CompactBlock.prototype.setEpochRoot = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.clearEpochRoot = function() {
  return this.setEpochRoot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.CompactBlock.prototype.hasEpochRoot = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Quarantined quarantined = 6;
 * @return {?proto.penumbra.chain.Quarantined}
 */
proto.penumbra.chain.CompactBlock.prototype.getQuarantined = function() {
  return /** @type{?proto.penumbra.chain.Quarantined} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.Quarantined, 6));
};


/**
 * @param {?proto.penumbra.chain.Quarantined|undefined} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
*/
proto.penumbra.chain.CompactBlock.prototype.setQuarantined = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.clearQuarantined = function() {
  return this.setQuarantined(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.CompactBlock.prototype.hasQuarantined = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated penumbra.crypto.IdentityKey slashed = 16;
 * @return {!Array<!proto.penumbra.crypto.IdentityKey>}
 */
proto.penumbra.chain.CompactBlock.prototype.getSlashedList = function() {
  return /** @type{!Array<!proto.penumbra.crypto.IdentityKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.penumbra.crypto.IdentityKey, 16));
};


/**
 * @param {!Array<!proto.penumbra.crypto.IdentityKey>} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
*/
proto.penumbra.chain.CompactBlock.prototype.setSlashedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.penumbra.crypto.IdentityKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.crypto.IdentityKey}
 */
proto.penumbra.chain.CompactBlock.prototype.addSlashed = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.penumbra.crypto.IdentityKey, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.clearSlashedList = function() {
  return this.setSlashedList([]);
};


/**
 * optional bool proposal_started = 20;
 * @return {boolean}
 */
proto.penumbra.chain.CompactBlock.prototype.getProposalStarted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.setProposalStarted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional FmdParameters fmd_parameters = 100;
 * @return {?proto.penumbra.chain.FmdParameters}
 */
proto.penumbra.chain.CompactBlock.prototype.getFmdParameters = function() {
  return /** @type{?proto.penumbra.chain.FmdParameters} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.FmdParameters, 100));
};


/**
 * @param {?proto.penumbra.chain.FmdParameters|undefined} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
*/
proto.penumbra.chain.CompactBlock.prototype.setFmdParameters = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.clearFmdParameters = function() {
  return this.setFmdParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.CompactBlock.prototype.hasFmdParameters = function() {
  return jspb.Message.getField(this, 100) != null;
};


